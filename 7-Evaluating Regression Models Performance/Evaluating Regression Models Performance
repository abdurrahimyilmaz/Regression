#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Feb 27 20:01:54 2020

@author: abdurrahim
"""

"""---------R squared = goodness of fit
SSres = her değerin regresyon çizgisinden dikey farkının karesinin toplamı
SStot = her değerin y_avg çizgisinden dikey farkının karesinin toplamı

R2 = 1- (SSres/SStot)
1'e yaklaşmasını istiyoruz bunun içinde ssres minimum yapmamız lazım sstot max yapmamız lazım
Negatif olursa model çöp

"""

"""---------adjusted R squared
Rs te biz modele yeni bir değişken eklediğimizde yüksek olasılıkla Rs değeri artar ve biz modelimizin iyileştiğini düşünebiliriz
ama eklediğimiz değişken belki de bizim outputumuzla hiçbir alakası olmayan bir şey olabilir
adjrs modele etkisi olmayacak parametreleri önler yani modele yeni etkilediğimiz değişkenler bizim için uygun değişkenler mi
bunu kullanarak anlarız artması bizim için olumlu bi gösterge

adj r2 = 1-(1-R2)*(n-1)/(n-p-1) p = number of regressors / n = sample size

"""

"""
iyi model için backward eliminationda p değeri en yüksek olanı tek değişken kalasıya kadar sil
sonra r2 ve adjr2 ile en iyi değişkenlerin seçildiği modeli bul bu parametreler 1e en yakın olduğu model ideal modeldir
"""

"""interpreting coefficents
b coefficients + ise output değişimi, değişkenin değişimiyle aynı yöndedir - ise ters yönde büyüklüğü de impactini gösterir yani bir birim atması outputun kaç birim artacağını belirti
"""

"""After learning about these six regression models, you are probably asking yourself the following questions:

    What are the pros and cons of each model ?

    How do I know which model to choose for my problem ?

    How can I improve each of these models ?

Let's answer each of these questions one by one:

1. What are the pros and cons of each model ?

Please find here a cheat-sheet that gives you all the pros and the cons of each regression model.

2. How do I know which model to choose for my problem ?

First, you need to figure out whether your problem is linear or non linear. You will learn how to do that in Part 10 - Model Selection. Then:

If your problem is linear, you should go for Simple Linear Regression if you only have one feature, and Multiple Linear Regression if you have several features.

If your problem is non linear, you should go for Polynomial Regression, SVR, Decision Tree or Random Forest. Then which one should you choose among these four ? That you will learn in Part 10 - Model Selection. The method consists of using a very relevant technique that evaluates your models performance, called k-Fold Cross Validation, and then picking the model that shows the best results. Feel free to jump directly to Part 10 if you already want to learn how to do that.

3. How can I improve each of these models ?

In Part 10 - Model Selection, you will find the second section dedicated to Parameter Tuning, that will allow you to improve the performance of your models, by tuning them. You probably already noticed that each model is composed of two types of parameters:

    the parameters that are learnt, for example the coefficients in Linear Regression,

    the hyperparameters.

The hyperparameters are the parameters that are not learnt and that are fixed values inside the model equations. For example, the regularization parameter lambda or the penalty parameter C are hyperparameters. So far we used the default value of these hyperparameters, and we haven't searched for their optimal value so that your model reaches even higher performance. Finding their optimal value is exactly what Parameter Tuning is about. So for those of you already interested in improving your model performance and doing some parameter tuning, feel free to jump directly to Part 10 - Model Selection.

And as a BONUS, please find here some slides we made about Regularization."""